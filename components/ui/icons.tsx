'use client'

import * as React from 'react'

import { cn } from '@/lib/utils'

function IconNextChat({
  className,
  inverted,
  ...props
}: React.ComponentProps<'svg'> & { inverted?: boolean }) {
  const id = React.useId()

  return (
    <svg
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('size-4', className)}
      {...props}
    >
      <defs>
        <linearGradient
          id={`gradient-${id}-1`}
          x1="10.6889"
          y1="10.3556"
          x2="13.8445"
          y2="14.2667"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'white' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'white' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
        <linearGradient
          id={`gradient-${id}-2`}
          x1="11.7555"
          y1="4.8"
          x2="11.7376"
          y2="9.50002"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'white' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'white' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
      </defs>
      <path
        d="M1 16L2.58314 11.2506C1.83084 9.74642 1.63835 8.02363 2.04013 6.39052C2.4419 4.75741 3.41171 3.32057 4.776 2.33712C6.1403 1.35367 7.81003 0.887808 9.4864 1.02289C11.1628 1.15798 12.7364 1.8852 13.9256 3.07442C15.1148 4.26363 15.842 5.83723 15.9771 7.5136C16.1122 9.18997 15.6463 10.8597 14.6629 12.224C13.6794 13.5883 12.2426 14.5581 10.6095 14.9599C8.97637 15.3616 7.25358 15.1692 5.74942 14.4169L1 16Z"
        fill={inverted ? 'black' : 'white'}
        stroke={inverted ? 'black' : 'white'}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <mask
        id="mask0_91_2047"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x={1}
        y={0}
        width={16}
        height={16}
      >
        <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
      </mask>
      <g mask="url(#mask0_91_2047)">
        <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
        <path
          d="M14.2896 14.0018L7.146 4.8H5.80005V11.1973H6.87681V6.16743L13.4444 14.6529C13.7407 14.4545 14.0231 14.2369 14.2896 14.0018Z"
          fill={`url(#gradient-${id}-1)`}
        />
        <rect
          x="11.2222"
          y="4.8"
          width="1.06667"
          height="6.4"
          fill={`url(#gradient-${id}-2)`}
        />
      </g>
    </svg>
  )
}

function IconOpenAI({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 24 24"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('size-4', className)}
      {...props}
    >
      <title>OpenAI icon</title>
      <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z" />
    </svg>
  )
}

function IconVercel({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      aria-label="Vercel logomark"
      role="img"
      viewBox="0 0 74 64"
      className={cn('size-4', className)}
      {...props}
    >
      <path
        d="M37.5896 0.25L74.5396 64.25H0.639648L37.5896 0.25Z"
        fill="currentColor"
      ></path>
    </svg>
  )
}

function IconGitHub({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      role="img"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <title>GitHub</title>
      <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
    </svg>
  )
}

function IconSeparator({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="none"
      shapeRendering="geometricPrecision"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="1"
      viewBox="0 0 24 24"
      aria-hidden="true"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M16.88 3.549L7.12 20.451"></path>
    </svg>
  )
}

function IconArrowDown({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconArrowRight({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="m221.66 133.66-72 72a8 8 0 0 1-11.32-11.32L196.69 136H40a8 8 0 0 1 0-16h156.69l-58.35-58.34a8 8 0 0 1 11.32-11.32l72 72a8 8 0 0 1 0 11.32Z" />
    </svg>
  )
}

function IconUser({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M0 0 C419.76 0 839.52 0 1272 0 C1272 410.85 1272 821.7 1272 1245 C852.24 1245 432.48 1245 0 1245 C0 834.15 0 423.3 0 0 Z " fill="#FEFEFE" transform="translate(0,0)"/>
      <path d="M0 0 C1.66557214 -0.02183765 3.33102221 -0.05623329 4.99609375 -0.10253906 C22.51721014 -0.58109988 22.51721014 -0.58109988 29.9765625 6.4050293 C31.50603516 7.58645508 31.50603516 7.58645508 33.06640625 8.79174805 C34.00613281 9.55100586 34.94585937 10.31026367 35.9140625 11.0925293 C48.49252388 20.9651919 62.54585194 28.61269151 76.9765625 35.4050293 C78.50603516 36.12819336 78.50603516 36.12819336 80.06640625 36.8659668 C89.18395849 41.08587176 98.36748805 44.72985935 108.0390625 47.4675293 C108.94229248 47.72646973 109.84552246 47.98541016 110.77612305 48.25219727 C116.57745621 49.86806811 122.34241016 51.09707746 128.2890625 52.0300293 C134.17442703 52.95518304 138.9421606 54.11725663 143.9765625 57.4050293 C146.21900471 60.76869262 146.22381496 61.84911539 146.21466064 65.77893066 C146.21715317 66.89465454 146.21964569 68.01037842 146.22221375 69.15991211 C146.21494766 70.38484375 146.20768158 71.60977539 146.20019531 72.87182617 C146.20082144 74.85175868 146.20145577 76.83169119 146.20239687 78.81162357 C146.20170539 80.94185541 146.19629358 83.07203356 146.18982697 85.20225525 C146.17743854 89.64982533 146.18439912 94.09723326 146.19525146 98.5447998 C146.22370427 111.19291452 146.23623956 123.84089199 146.20654297 136.48901367 C146.19030701 143.47335606 146.19558676 150.45734502 146.22433925 157.44165087 C146.23857857 161.13383682 146.24177436 164.82528743 146.21811676 168.5174408 C146.19166666 172.6464595 146.21186141 176.77403912 146.23535156 180.90307617 C146.21998856 182.11181396 146.20462555 183.32055176 146.188797 184.56591797 C146.28750025 192.72403924 148.03386878 198.81282975 152.9765625 205.4050293 C157.20966916 209.08146577 161.32787588 211.07914353 166.9765625 211.4050293 C167.87503906 211.4669043 168.77351563 211.5287793 169.69921875 211.5925293 C177.45926767 211.90646301 183.78830769 211.1156761 189.7578125 205.8269043 C196.88867986 198.06684276 197.40841788 190.76783356 197.32958984 180.58837891 C197.33290566 178.62537727 197.33622607 176.66237564 197.33972001 174.69937432 C197.34068614 172.60034975 197.3343841 170.50145608 197.32612228 168.40244865 C197.30970253 164.01890783 197.31825383 159.63563077 197.33096313 155.25209045 C197.36102307 143.57866802 197.3596119 131.90529459 197.34071028 120.23185307 C197.32837081 112.55352971 197.33025046 104.87550676 197.35909808 97.197218 C197.3743117 92.84236388 197.36688183 88.48832676 197.34238791 84.13352382 C197.32993417 80.78633157 197.34989907 77.4394647 197.36474609 74.09228516 C197.35140732 72.89055664 197.33806854 71.68882812 197.32432556 70.45068359 C197.41402053 61.36979962 197.41402053 61.36979962 200.32266235 57.68800354 C203.47728436 54.9742915 205.59424419 54.28149296 209.6640625 53.4675293 C211.09826804 53.14996734 212.53181821 52.82943685 213.96484375 52.5065918 C214.75842285 52.33417969 215.55200195 52.16176758 216.36962891 51.98413086 C249.38409549 44.65033101 280.10499884 31.57994206 307.2265625 11.2800293 C307.79076904 10.86132568 308.35497559 10.44262207 308.9362793 10.01123047 C311.04481971 8.40195183 311.04481971 8.40195183 313.09423828 6.39624023 C321.76606249 -1.14132387 329.73433933 -0.6173682 340.6015625 -0.2199707 C342.34174558 -0.18463268 344.08198427 -0.15193863 345.82226562 -0.12182617 C380.81444774 0.60620895 380.81444774 0.60620895 392.9765625 4.4050293 C395.01459894 4.83910459 397.05652263 5.25524707 399.1015625 5.6550293 C430.24074305 12.24726007 462.30198117 24.22943795 487.9765625 43.4050293 C488.72808594 43.94256836 489.47960937 44.48010742 490.25390625 45.03393555 C492.19985229 46.44811812 494.09120134 47.91118466 495.9765625 49.4050293 C496.8015625 50.04569336 497.6265625 50.68635742 498.4765625 51.34643555 C515.40145978 64.78538097 527.81158685 80.38200345 537.9765625 99.4050293 C538.37359375 100.12948242 538.770625 100.85393555 539.1796875 101.6003418 C540.18630493 103.5097193 541.0971525 105.43380943 541.9765625 107.4050293 C542.55664062 108.69086914 542.55664062 108.69086914 543.1484375 110.00268555 C549.3972164 124.94961039 552.20906863 141.07736251 553.6171875 157.14331055 C553.61565247 160.25259038 553.61565247 160.25259038 554.9765625 161.4050293 C555.08138483 163.05396945 555.11620804 164.70739825 555.12373352 166.35964966 C555.13446648 167.9699556 555.13446648 167.9699556 555.14541626 169.61279297 C555.14944962 171.39544556 555.14944962 171.39544556 555.15356445 173.21411133 C555.16342125 175.08013504 555.16342125 175.08013504 555.17347717 176.9838562 C555.19328489 181.12685379 555.20489666 185.26981245 555.21484375 189.4128418 C555.21889172 190.84172459 555.22300865 192.27060719 555.22719383 193.69948959 C555.24627139 200.42443713 555.2604871 207.14937362 555.2688058 213.87434304 C555.27853542 221.61134259 555.30473096 229.34805277 555.34530669 237.08495057 C555.37563768 243.07666533 555.39029133 249.0682981 555.39358681 255.06008804 C555.39592156 258.63158035 555.40467056 262.20276454 555.43004799 265.77417374 C555.68502144 303.64092869 555.68502144 303.64092869 544.9765625 316.4050293 C536.00035206 324.64490997 524.60047298 325.85981438 512.90291691 325.77696609 C511.73123871 325.78072722 510.55956051 325.78448835 509.35237691 325.78836346 C506.11732943 325.7957348 502.88263273 325.78976571 499.64760868 325.77802924 C496.12146958 325.76857634 492.59536199 325.77663689 489.06922096 325.78242755 C482.89459507 325.79017064 476.72005338 325.78681047 470.54543304 325.77610397 C461.36300561 325.76022638 452.18063668 325.76158771 442.99819966 325.76639626 C427.54533585 325.77398157 412.09250779 325.767478 396.63965034 325.75278473 C381.32846357 325.73824368 366.01729247 325.72949771 350.70609856 325.72859955 C349.75317791 325.72853845 348.80025726 325.72847736 347.81846023 325.72841441 C343.95005584 325.72818489 340.08165145 325.72799771 336.21324706 325.72786628 C300.95733989 325.72665493 265.70145459 325.71096034 230.44555664 325.6862793 C197.19067211 325.66300413 163.93580083 325.648815 130.6809082 325.64526367 C129.65711768 325.64515216 128.63332715 325.64504064 127.57851267 325.64492575 C123.4508442 325.64447688 119.32317572 325.6440349 115.19550724 325.64359332 C113.13832872 325.64337294 111.08115019 325.64315164 109.02397167 325.64292944 C106.9717229 325.64270808 104.91947413 325.64248931 102.86722536 325.64227314 C70.14155724 325.63875328 37.4158916 325.62729063 4.69022598 325.6144668 C-4.88209332 325.61075298 -14.45441245 325.60748687 -24.02673221 325.60521793 C-44.15956296 325.60040042 -64.29238579 325.59327169 -84.42521106 325.57707027 C-92.74958672 325.57044273 -101.07395602 325.56527592 -109.3983345 325.56460953 C-116.30684765 325.56405432 -123.21534849 325.56015277 -130.12385684 325.55183361 C-133.59571352 325.54774612 -137.0675522 325.54512844 -140.53941124 325.54694882 C-152.49986223 325.55047493 -164.45329509 325.54156488 -176.40397739 325.00953293 C-177.19499086 324.9776464 -177.98600433 324.94575987 -178.8009879 324.91290708 C-186.96896076 324.48252189 -195.22897914 322.53059956 -201.0234375 316.4050293 C-213.50591053 302.18157976 -211.62801143 281.75851266 -211.56073952 264.12037277 C-211.55045138 260.56689066 -211.56004985 257.01344515 -211.56628418 253.45996094 C-211.57352301 247.48893719 -211.5640808 241.51811251 -211.54492188 235.54711914 C-211.52324043 228.71247515 -211.53015581 221.87831034 -211.5522275 215.04367828 C-211.57058669 209.11432649 -211.5728391 203.18511608 -211.56247282 197.25574493 C-211.5563384 193.74180813 -211.55511365 190.22809353 -211.56861877 186.71417236 C-211.67020181 156.09121555 -207.63027074 127.054677 -194.0234375 99.4050293 C-193.28287109 97.88135742 -193.28287109 97.88135742 -192.52734375 96.3269043 C-185.94266392 83.56792128 -176.93097115 72.68956194 -167.0234375 62.4050293 C-166.07791016 61.36475586 -166.07791016 61.36475586 -165.11328125 60.3034668 C-131.84135852 24.76466582 -73.89578213 3.50709604 -26.3046875 0.86987305 C-25.57463501 0.82885971 -24.84458252 0.78784637 -24.09240723 0.74559021 C-16.06476517 0.32007337 -8.0383384 0.07894797 0 0 Z " fill="#090A0C" transform="translate(463.0234375,705.594970703125)"/>
      <path d="M0 0 C2.68968388 0.0106965 5.37869598 0.00006121 8.06835938 -0.01269531 C18.34204439 -0.02167261 28.17553083 0.55628224 38.32617188 2.26074219 C39.31762207 2.41639648 40.30907227 2.57205078 41.33056641 2.73242188 C79.40711346 8.99643738 115.70122898 28.34980026 142.32617188 56.26074219 C144.63259151 58.59572429 146.93821471 60.9062938 149.36132812 63.12011719 C167.4326295 79.97273735 179.70282458 104.4332672 188.32617188 127.26074219 C188.74511719 128.36933594 189.1640625 129.47792969 189.59570312 130.62011719 C192.20773485 138.0159823 193.8770414 145.56062877 195.32617188 153.26074219 C195.53371094 154.35644531 195.74125 155.45214844 195.95507812 156.58105469 C199.42936039 176.74646924 199.42936039 176.74646924 195.32617188 184.26074219 C192.51541215 187.21810629 190.93850706 188.17277096 186.87304688 188.75683594 C185.62007812 188.7375 184.36710937 188.71816406 183.07617188 188.69824219 C181.83351563 188.69695312 180.59085938 188.69566406 179.31054688 188.69433594 C175.50666617 188.44007854 172.22930791 187.33566998 168.65722656 186.05639648 C164.70482229 184.70733013 160.6505468 183.84638574 156.57617188 182.94824219 C155.63499512 182.73876953 154.69381836 182.52929688 153.72412109 182.31347656 C150.59304232 181.62185042 147.45980048 180.94071603 144.32617188 180.26074219 C143.2262793 180.0192041 142.12638672 179.77766602 140.99316406 179.52880859 C114.4747397 173.73286554 87.9276255 169.03944117 60.79443359 167.47851562 C58.32617188 167.26074219 58.32617188 167.26074219 55.48876953 166.77294922 C40.18739768 164.29477428 24.18577179 165.10525263 8.74951172 165.13037109 C4.83361948 165.13573199 0.9178419 165.13039552 -2.99804688 165.12402344 C-25.44680827 164.70498415 -25.44680827 164.70498415 -47.67382812 167.26074219 C-49.90049119 167.48049692 -52.13021947 167.67012272 -54.36132812 167.83886719 C-55.69880303 167.9452177 -57.03620263 168.05251842 -58.37353516 168.16064453 C-59.07399963 168.21710144 -59.77446411 168.27355835 -60.49615479 168.33172607 C-83.30150052 170.20644451 -105.53687525 174.18616007 -127.85742188 179.21386719 C-131.49205202 180.02388241 -135.10962088 180.67936634 -138.79882812 181.19824219 C-143.43353587 181.88160785 -147.75531591 183.1633778 -152.22021484 184.5390625 C-171.38161866 190.4041771 -171.38161866 190.4041771 -180.67382812 188.26074219 C-183.32205117 186.12543048 -185.18978923 184.46726277 -186.46679688 181.28417969 C-188.72913236 159.17305173 -181.74209116 135.24081623 -172.67382812 115.26074219 C-172.11621105 113.96661152 -171.55894173 112.67233097 -171.00195312 111.37792969 C-166.06870287 100.16849609 -159.78870472 90.20777721 -152.67382812 80.26074219 C-152.2484375 79.66277832 -151.82304687 79.06481445 -151.38476562 78.44873047 C-142.66051233 66.31568627 -132.36112812 54.61912866 -120.67382812 45.26074219 C-119.73152344 44.46925781 -118.78921875 43.67777344 -117.81835938 42.86230469 C-96.14097287 24.94792122 -70.70240993 11.54573843 -43.29882812 5.13574219 C-42.265 4.884375 -41.23117187 4.63300781 -40.16601562 4.37402344 C-26.65489793 1.16429274 -13.84563399 -0.06535702 0 0 Z " fill="#090A0C" transform="translate(629.673828125,194.7392578125)"/>
      <path d="M0 0 C2.13552942 0.00315943 4.26967086 -0.02032412 6.4050293 -0.0456543 C7.77547027 -0.0479278 9.14591494 -0.04863055 10.51635742 -0.04760742 C11.75184326 -0.05058838 12.9873291 -0.05356934 14.26025391 -0.05664062 C18.79366789 0.43294625 22.00641101 1.72941873 25.35881042 4.85502625 C27.42466324 8.623382 27.08966994 12.18434114 27.02905273 16.41333008 C27.02800034 17.33454147 27.02694794 18.25575287 27.02586365 19.20487976 C27.0222542 21.20899536 27.01209284 23.21310731 26.99619293 25.21716309 C26.97310245 28.41784898 26.97208679 31.61784596 26.97747803 34.81860352 C26.99010331 43.92115133 26.9740679 53.02334619 26.91723633 62.12573242 C26.7163339 97.46446733 27.34316065 131.23820095 48.45361328 161.36376953 C49.70776367 163.31567383 49.70776367 163.31567383 50.70776367 166.31567383 C51.69776367 166.64567383 52.68776367 166.97567383 53.70776367 167.31567383 C53.70776367 167.97567383 53.70776367 168.63567383 53.70776367 169.31567383 C54.69776367 169.65598633 54.69776367 169.65598633 55.70776367 170.00317383 C58.19913613 171.09314928 60.24650999 172.23313942 62.52026367 173.69067383 C71.82336634 179.56089729 81.17946787 182.42576406 91.70776367 185.31567383 C92.36921387 185.49815674 93.03066406 185.68063965 93.7121582 185.86865234 C105.94635037 188.60914731 118.78603457 186.07168441 129.43041992 179.82348633 C134.64123111 176.37344667 139.36484541 172.28628244 144.14135742 168.26879883 C163.31470238 152.43928523 181.49239485 150.87405232 205.70776367 152.31567383 C212.86821049 153.07683002 219.25713403 154.38918509 225.64526367 157.75317383 C226.31638184 158.09662842 226.9875 158.44008301 227.67895508 158.79394531 C233.698288 162.02433489 238.67039926 166.14932598 243.73120117 170.69458008 C256.77945309 182.18457619 268.28775323 187.09998709 285.70776367 186.31567383 C286.46573242 186.30793945 287.22370117 186.30020508 288.00463867 186.29223633 C299.44168235 185.71595118 311.04316888 179.92583631 321.02026367 174.69067383 C321.73118164 174.3187793 322.44209961 173.94688477 323.17456055 173.5637207 C326.93665666 171.51728581 329.73040318 169.44154874 332.70776367 166.31567383 C333.36776367 166.31567383 334.02776367 166.31567383 334.70776367 166.31567383 C334.98362305 165.74075195 335.25948242 165.16583008 335.54370117 164.57348633 C336.69176857 162.34669789 337.98038374 160.29857327 339.33276367 158.19067383 C358.12385927 126.55213817 358.72342641 94.52098602 358.53540039 58.73358154 C358.49530261 49.679406 358.51894012 40.62512727 358.53839684 31.57092285 C358.53977278 28.42872709 358.52544611 25.28691816 358.508255 22.14477539 C358.5052505 20.234294 358.50248539 18.32381221 358.5 16.41333008 C358.49116287 15.54597733 358.48232574 14.67862457 358.47322083 13.7849884 C358.47479187 12.58793526 358.47479187 12.58793526 358.47639465 11.36669922 C358.47105319 10.33169029 358.47105319 10.33169029 358.46560383 9.27577209 C358.90233173 5.74079455 360.12993492 3.7664518 362.91625977 1.59277344 C367.83666029 -0.65828614 372.9680269 -0.16444753 378.2980957 -0.13037109 C380.30580257 -0.1219394 382.31355167 -0.1518969 384.32104492 -0.18237305 C394.71759615 -0.17720063 404.45677301 1.15899071 412.21948242 8.64379883 C422.59289789 20.29687447 423.68171355 35.22232265 423.23120117 50.17114258 C422.11148143 68.25433227 413.80346426 89.53567146 400.14526367 101.87817383 C397.74102956 103.74112886 395.51429542 104.78434725 392.68041992 105.84692383 C390.14381987 107.10167084 388.9599476 107.83837656 387.62744141 110.36035156 C386.83626514 112.9755334 386.2483464 115.57495803 385.70776367 118.25317383 C385.22916106 120.25779641 384.74195687 122.26038198 384.24682617 124.26098633 C383.99835938 125.27580078 383.74989258 126.29061523 383.49389648 127.33618164 C378.83904615 144.97835353 370.61711565 163.4304854 361.09570312 178.94189453 C359.35657682 181.91630527 358.84360888 184.62335378 358.20776367 188.00317383 C354.77042203 204.82346488 348.46342716 218.61103586 336.70776367 231.31567383 C336.20067871 231.86658691 335.69359375 232.4175 335.17114258 232.98510742 C330.92672115 237.43320289 326.44225745 240.74391754 321.20776367 243.94067383 C320.39533203 244.44501953 319.58290039 244.94936523 318.74584961 245.46899414 C309.40897428 251.20798022 299.86711318 256.59167614 290.27709961 261.89379883 C288.06359913 263.11875386 285.85755305 264.35585168 283.65307617 265.59692383 C274.13972919 270.88466983 264.22926551 275.13446405 254.18041992 279.2902832 C251.94398814 280.21771344 249.71577517 281.16220649 247.48901367 282.11254883 C240.47690763 285.06245098 233.59127317 287.27336353 226.12182617 288.77270508 C223.76941371 289.0757882 223.76941371 289.0757882 222.70776367 290.31567383 C212.58798084 292.59076275 202.3943594 292.71365299 192.08276367 292.69067383 C190.89387543 292.69135361 190.89387543 292.69135361 189.68096924 292.69204712 C177.58243645 292.67173886 166.35713892 291.8016131 154.70776367 288.31567383 C153.71905273 288.05399414 152.7303418 287.79231445 151.71166992 287.52270508 C126.78106887 280.6544573 102.26199505 266.92464546 80.17456055 253.78149414 C77.70979362 252.31688006 75.2329325 250.87443827 72.75463867 249.43286133 C64.29310459 244.45574138 56.58683943 239.41292923 49.70776367 232.31567383 C49.01682617 231.63375977 48.32588867 230.9518457 47.61401367 230.24926758 C39.02241496 221.27765584 33.35965932 210.10862466 29.70776367 198.31567383 C29.43319336 197.46231445 29.15862305 196.60895508 28.87573242 195.72973633 C26.91582397 189.45416738 26.91582397 189.45416738 26.34667969 186.33984375 C25.18515256 180.20722123 22.91714008 175.31058672 19.89526367 169.87817383 C18.9886811 168.19736358 18.0824271 166.51637607 17.17651367 164.83520508 C16.35455225 163.32817326 15.53175323 161.82159769 14.70776367 160.31567383 C10.32841926 152.27614205 7.47042338 144.00935823 4.70776367 135.31567383 C4.21057297 133.87719976 3.71105233 132.43952573 3.20776367 131.00317383 C2.16392924 128.00431248 1.39528442 125.00283359 0.69604492 121.90942383 C0.40600586 120.70346558 0.40600586 120.70346558 0.11010742 119.47314453 C-0.27554472 117.85822617 -0.63482454 116.23672226 -0.96411133 114.609375 C-2.036737 110.17555172 -2.036737 110.17555172 -5.11547852 106.98339844 C-7.14453996 105.98835084 -9.18976592 105.14155857 -11.29223633 104.31567383 C-26.83213353 94.37348153 -32.69151958 75.37412636 -36.42504883 58.38208008 C-39.34454886 43.13727661 -38.63996442 26.09591745 -30.04223633 12.81567383 C-21.7361232 1.97851336 -13.12922895 -0.04070378 0 0 Z " fill="#0A0B0D" transform="translate(442.292236328125,421.684326171875)"/>
      <path d="M0 0 C1.65 0 3.3 0 5 0 C3.5140084 4.59306496 1.14985318 7.43569245 -2 11 C-3.32 10.34 -4.64 9.68 -6 9 C-5.25 7.0625 -5.25 7.0625 -4 5 C-1.875 4.25 -1.875 4.25 0 4 C0 2.68 0 1.36 0 0 Z " fill="#101113" transform="translate(782,641)"/>
      <path d="M0 0 C0.61875 0.804375 1.2375 1.60875 1.875 2.4375 C3.74164041 5.03874519 3.74164041 5.03874519 6 6 C5.34 7.65 4.68 9.3 4 11 C-0.66154042 9.50164772 -1.86610751 6.11536409 -4 2 C-2.68 1.34 -1.36 0.68 0 0 Z " fill="#141517" transform="translate(262,1013)"/>
      <path d="M0 0 C0.556875 0.226875 1.11375 0.45375 1.6875 0.6875 C1.3575 2.0075 1.0275 3.3275 0.6875 4.6875 C0.0275 4.6875 -0.6325 4.6875 -1.3125 4.6875 C-1.3125 5.3475 -1.3125 6.0075 -1.3125 6.6875 C-1.9725 6.6875 -2.6325 6.6875 -3.3125 6.6875 C-3.3125 6.0275 -3.3125 5.3675 -3.3125 4.6875 C-4.6325 4.0275 -5.9525 3.3675 -7.3125 2.6875 C-2.88173077 -0.38942308 -2.88173077 -0.38942308 0 0 Z " fill="#0B0C0E" transform="translate(548.3125,215.3125)"/>
      <path d="M0 0 C1 3 1 3 -0.109375 5.62890625 C-0.65078125 6.59699219 -1.1921875 7.56507813 -1.75 8.5625 C-2.54664063 10.01849609 -2.54664063 10.01849609 -3.359375 11.50390625 C-5 14 -5 14 -8 16 C-6.42986223 10.03347646 -3.24970218 5.17090975 0 0 Z " fill="#2B2D2D" transform="translate(277,791)"/>
      <path d="M0 0 C3.98381075 2.16264012 6.88983545 4.71211176 10 8 C9.05125 7.814375 8.1025 7.62875 7.125 7.4375 C4.10131207 6.71313368 4.10131207 6.71313368 2 8 C0.23537317 4.91190305 0 3.76687864 0 0 Z " fill="#1A1B1C" transform="translate(682,590)"/>
      <path d="M0 0 C0 0.99 0 1.98 0 3 C0.50413137 6.38488206 1.11019608 9.69501401 2 13 C-2.62222222 8.73333333 -2.62222222 8.73333333 -4.0625 5.9375 C-4 4 -4 4 -2.0625 1.75 C-1.381875 1.1725 -0.70125 0.595 0 0 Z " fill="#131416" transform="translate(485,634)"/>
      <path d="M0 0 C0.66 0.33 1.32 0.66 2 1 C1.01 2.32 0.02 3.64 -1 5 C-0.01 6.485 -0.01 6.485 1 8 C-2.75 9.125 -2.75 9.125 -5 8 C-5 5 -5 5 -2.5 2.3125 C-1.675 1.549375 -0.85 0.78625 0 0 Z " fill="#232324" transform="translate(304,760)"/>
      <path d="M0 0 C2 3 2 3 2 7 C1.2575 6.79375 0.515 6.5875 -0.25 6.375 C-3.32330841 5.95591249 -4.42786866 6.38050989 -7 8 C-5.71937515 6.2925002 -4.38232443 4.62626404 -3 3 C-2.34 3 -1.68 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z " fill="#262626" transform="translate(778,585)"/>
      <path d="M0 0 C1.48117801 0.28127421 2.95993249 0.57533732 4.4375 0.875 C5.67306641 1.11863281 5.67306641 1.11863281 6.93359375 1.3671875 C7.61550781 1.57601562 8.29742187 1.78484375 9 2 C9.33 2.66 9.66 3.32 10 4 C9.67 4.66 9.34 5.32 9 6 C5.06326356 4.68775452 2.77280706 3.08089673 0 0 Z " fill="#222324" transform="translate(427,522)"/>
      <path d="M0 0 C2.97 0.99 5.94 1.98 9 3 C7 4 5 5 3 6 C0 2.25 0 2.25 0 0 Z " fill="#222222" transform="translate(895,721)"/>
      <path d="M0 0 C2.64 0.99 5.28 1.98 8 3 C8 3.99 8 4.98 8 6 C4.22454612 4.90931332 1.52956528 4.0916909 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z " fill="#242527" transform="translate(539,682)"/>
      <path d="M0 0 C-0.33 0.598125 -0.66 1.19625 -1 1.8125 C-2.20787988 4.05386471 -2.20787988 4.05386471 -2 7 C-3.32 5.68 -4.64 4.36 -6 3 C-3.375 0 -3.375 0 0 0 Z " fill="#191919" transform="translate(428,514)"/>
      <path d="M0 0 C1.22589844 0.29197266 1.22589844 0.29197266 2.4765625 0.58984375 C3.41628906 0.82380859 3.41628906 0.82380859 4.375 1.0625 C4.375 1.3925 4.375 1.7225 4.375 2.0625 C1.075 2.0625 -2.225 2.0625 -5.625 2.0625 C-5.955 1.4025 -6.285 0.7425 -6.625 0.0625 C-3.99249612 -1.25375194 -2.82320944 -0.68563658 0 0 Z " fill="#1D1E20" transform="translate(550.625,745.9375)"/>
      <path d="M0 0 C3.26954202 0.56371414 4.82575883 1.49962266 7 4 C4.625 4.625 4.625 4.625 2 5 C1.34 4.34 0.68 3.68 0 3 C0 2.01 0 1.02 0 0 Z " fill="#161719" transform="translate(490,712)"/>
      <path d="M0 0 C-1.98 0.99 -3.96 1.98 -6 3 C-6 3.66 -6 4.32 -6 5 C-6.66 5 -7.32 5 -8 5 C-8 4.01 -8 3.02 -8 2 C-8.99 1.67 -9.98 1.34 -11 1 C-3.57142857 -1.42857143 -3.57142857 -1.42857143 0 0 Z " fill="#444445" transform="translate(414,711)"/>
      <path d="M0 0 C0.99 0.33 1.98 0.66 3 1 C0.31158141 3.25245881 -1.64641875 4.88213958 -5 6 C-5 5.01 -5 4.02 -5 3 C-4.01 3 -3.02 3 -2 3 C-2 2.34 -2 1.68 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z " fill="#1C1D1E" transform="translate(721,686)"/>
      <path d="M0 0 C3.465 1.98 3.465 1.98 7 4 C6.34 4.66 5.68 5.32 5 6 C2.875 5.625 2.875 5.625 1 5 C0.67 3.35 0.34 1.7 0 0 Z " fill="#191A1C" transform="translate(500,593)"/>
      <path d="M0 0 C0.33 0.66 0.66 1.32 1 2 C1.66 2.33 2.32 2.66 3 3 C1.35 3.33 -0.3 3.66 -2 4 C-2.33 4.99 -2.66 5.98 -3 7 C-3.66 6.67 -4.32 6.34 -5 6 C-3.35 4.02 -1.7 2.04 0 0 Z " fill="#2B2C2E" transform="translate(291,773)"/>
      <path d="M0 0 C0.33 0.99 0.66 1.98 1 3 C-2 5 -2 5 -4.1875 4.625 C-4.785625 4.41875 -5.38375 4.2125 -6 4 C-4.03617993 2.49440461 -2.21736634 1.10868317 0 0 Z " fill="#212121" transform="translate(573,601)"/>
      <path d="M0 0 C0.99 0.66 1.98 1.32 3 2 C1.8125 3.5 1.8125 3.5 0 5 C-2.6875 5.1875 -2.6875 5.1875 -5 5 C-3.35 3.35 -1.7 1.7 0 0 Z " fill="#262729" transform="translate(653,911)"/>
      <path d="M0 0 C0.66 0.33 1.32 0.66 2 1 C1.34 2.65 0.68 4.3 0 6 C-1.32 5.67 -2.64 5.34 -4 5 C-4 4.01 -4 3.02 -4 2 C-2.125 0.9375 -2.125 0.9375 0 0 Z " fill="#212224" transform="translate(756,600)"/>
      <path d="M0 0 C0.556875 0.226875 1.11375 0.45375 1.6875 0.6875 C-2.74326923 3.76442308 -2.74326923 3.76442308 -5.625 3.375 C-6.4603125 3.0346875 -6.4603125 3.0346875 -7.3125 2.6875 C-2.88173077 -0.38942308 -2.88173077 -0.38942308 0 0 Z " fill="#2C2C2E" transform="translate(548.3125,215.3125)"/>
    </svg>
  )
}

function IconPlus({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M224 128a8 8 0 0 1-8 8h-80v80a8 8 0 0 1-16 0v-80H40a8 8 0 0 1 0-16h80V40a8 8 0 0 1 16 0v80h80a8 8 0 0 1 8 8Z" />
    </svg>
  )
}

function IconArrowElbow({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M200 32v144a8 8 0 0 1-8 8H67.31l34.35 34.34a8 8 0 0 1-11.32 11.32l-48-48a8 8 0 0 1 0-11.32l48-48a8 8 0 0 1 11.32 11.32L67.31 168H184V32a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconSpinner({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4 animate-spin', className)}
      {...props}
    >
      <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
    </svg>
  )
}

function IconMessage({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M216 48H40a16 16 0 0 0-16 16v160a15.84 15.84 0 0 0 9.25 14.5A16.05 16.05 0 0 0 40 240a15.89 15.89 0 0 0 10.25-3.78.69.69 0 0 0 .13-.11L82.5 208H216a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16ZM40 224Zm176-32H82.5a16 16 0 0 0-10.3 3.75l-.12.11L40 224V64h176Z" />
    </svg>
  )
}

function IconTrash({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconRefresh({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M197.67 186.37a8 8 0 0 1 0 11.29C196.58 198.73 170.82 224 128 224c-37.39 0-64.53-22.4-80-39.85V208a8 8 0 0 1-16 0v-48a8 8 0 0 1 8-8h48a8 8 0 0 1 0 16H55.44C67.76 183.35 93 208 128 208c36 0 58.14-21.46 58.36-21.68a8 8 0 0 1 11.31.05ZM216 40a8 8 0 0 0-8 8v23.85C192.53 54.4 165.39 32 128 32c-42.82 0-68.58 25.27-69.66 26.34a8 8 0 0 0 11.3 11.34C69.86 69.46 92 48 128 48c35 0 60.24 24.65 72.56 40H168a8 8 0 0 0 0 16h48a8 8 0 0 0 8-8V48a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconStop({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88 88.1 88.1 0 0 1-88 88Zm24-120h-48a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8Zm-8 48h-32v-32h32Z" />
    </svg>
  )
}

function IconSidebar({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16ZM40 56h40v144H40Zm176 144H96V56h120v144Z" />
    </svg>
  )
}

function IconMoon({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M233.54 142.23a8 8 0 0 0-8-2 88.08 88.08 0 0 1-109.8-109.8 8 8 0 0 0-10-10 104.84 104.84 0 0 0-52.91 37A104 104 0 0 0 136 224a103.09 103.09 0 0 0 62.52-20.88 104.84 104.84 0 0 0 37-52.91 8 8 0 0 0-1.98-7.98Zm-44.64 48.11A88 88 0 0 1 65.66 67.11a89 89 0 0 1 31.4-26A106 106 0 0 0 96 56a104.11 104.11 0 0 0 104 104 106 106 0 0 0 14.92-1.06 89 89 0 0 1-26.02 31.4Z" />
    </svg>
  )
}

function IconSun({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64 64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48 48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z" />
    </svg>
  )
}

function IconCopy({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M216 32H88a8 8 0 0 0-8 8v40H40a8 8 0 0 0-8 8v128a8 8 0 0 0 8 8h128a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8Zm-56 176H48V96h112Zm48-48h-32V88a8 8 0 0 0-8-8H96V48h112Z" />
    </svg>
  )
}

function IconCheck({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="m229.66 77.66-128 128a8 8 0 0 1-11.32 0l-56-56a8 8 0 0 1 11.32-11.32L96 188.69 218.34 66.34a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconDownload({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M224 152v56a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-56a8 8 0 0 1 16 0v56h160v-56a8 8 0 0 1 16 0Zm-101.66 5.66a8 8 0 0 0 11.32 0l40-40a8 8 0 0 0-11.32-11.32L136 132.69V40a8 8 0 0 0-16 0v92.69l-26.34-26.35a8 8 0 0 0-11.32 11.32Z" />
    </svg>
  )
}

function IconClose({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path d="M205.66 194.34a8 8 0 0 1-11.32 11.32L128 139.31l-66.34 66.35a8 8 0 0 1-11.32-11.32L116.69 128 50.34 61.66a8 8 0 0 1 11.32-11.32L128 116.69l66.34-66.35a8 8 0 0 1 11.32 11.32L139.31 128Z" />
    </svg>
  )
}

function IconEdit({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className={cn('size-4', className)}
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
      />
    </svg>
  )
}

function IconShare({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('size-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="m237.66 106.35-80-80A8 8 0 0 0 144 32v40.35c-25.94 2.22-54.59 14.92-78.16 34.91-28.38 24.08-46.05 55.11-49.76 87.37a12 12 0 0 0 20.68 9.58c11-11.71 50.14-48.74 107.24-52V192a8 8 0 0 0 13.66 5.65l80-80a8 8 0 0 0 0-11.3ZM160 172.69V144a8 8 0 0 0-8-8c-28.08 0-55.43 7.33-81.29 21.8a196.17 196.17 0 0 0-36.57 26.52c5.8-23.84 20.42-46.51 42.05-64.86C99.41 99.77 127.75 88 152 88a8 8 0 0 0 8-8V51.32L220.69 112Z" />
    </svg>
  )
}

function IconUsers({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('size-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M117.25 157.92a60 60 0 1 0-66.5 0 95.83 95.83 0 0 0-47.22 37.71 8 8 0 1 0 13.4 8.74 80 80 0 0 1 134.14 0 8 8 0 0 0 13.4-8.74 95.83 95.83 0 0 0-47.22-37.71ZM40 108a44 44 0 1 1 44 44 44.05 44.05 0 0 1-44-44Zm210.14 98.7a8 8 0 0 1-11.07-2.33A79.83 79.83 0 0 0 172 168a8 8 0 0 1 0-16 44 44 0 1 0-16.34-84.87 8 8 0 1 1-5.94-14.85 60 60 0 0 1 55.53 105.64 95.83 95.83 0 0 1 47.22 37.71 8 8 0 0 1-2.33 11.07Z" />
    </svg>
  )
}

function IconExternalLink({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('size-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M224 104a8 8 0 0 1-16 0V59.32l-66.33 66.34a8 8 0 0 1-11.32-11.32L196.68 48H152a8 8 0 0 1 0-16h64a8 8 0 0 1 8 8Zm-40 24a8 8 0 0 0-8 8v72H48V80h72a8 8 0 0 0 0-16H48a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-72a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconChevronUpDown({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('size-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M181.66 170.34a8 8 0 0 1 0 11.32l-48 48a8 8 0 0 1-11.32 0l-48-48a8 8 0 0 1 11.32-11.32L128 212.69l42.34-42.35a8 8 0 0 1 11.32 0Zm-96-84.68L128 43.31l42.34 42.35a8 8 0 0 0 11.32-11.32l-48-48a8 8 0 0 0-11.32 0l-48 48a8 8 0 0 0 11.32 11.32Z" />
    </svg>
  )
}

export {
  IconEdit,
  IconNextChat,
  IconOpenAI,
  IconVercel,
  IconGitHub,
  IconSeparator,
  IconArrowDown,
  IconArrowRight,
  IconUser,
  IconPlus,
  IconArrowElbow,
  IconSpinner,
  IconMessage,
  IconTrash,
  IconRefresh,
  IconStop,
  IconSidebar,
  IconMoon,
  IconSun,
  IconCopy,
  IconCheck,
  IconDownload,
  IconClose,
  IconShare,
  IconUsers,
  IconExternalLink,
  IconChevronUpDown
}
